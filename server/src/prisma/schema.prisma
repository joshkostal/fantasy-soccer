datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Player {
    id         Int    @id @default(autoincrement())
    name       String @db.VarChar(63)
    teamId     Int?
    positionId Int

    team          Team?               @relation(fields: [teamId], references: [id])
    position      Position            @relation(fields: [positionId], references: [id])
    playerMatches PlayerMatch[]
    fantasyTeams  FantasyTeamPlayer[]
}

model Position {
    id        Int    @id @default(autoincrement())
    name      String @unique @db.VarChar(15)
    shortName String @unique @db.VarChar(2)

    players Player[]
}

model PlayerMatch {
    id        Int     @id @default(autoincrement())
    isStarter Boolean @default(false)
    points    Int? // Break this down to individual stats
    matchId   Int
    playerId  Int

    match  Match  @relation(fields: [matchId], references: [id])
    player Player @relation(fields: [playerId], references: [id])
}

model Match {
    id         Int      @id @default(autoincrement())
    matchWeek  Int
    homeScore  Int?
    awayScore  Int?
    homeTeamId Int
    awayTeamId Int
    dateTime   DateTime

    homeTeam      Team          @relation("home", fields: [homeTeamId], references: [id])
    awayTeam      Team          @relation("away", fields: [awayTeamId], references: [id])
    playerMatches PlayerMatch[]
}

model Team {
    id        Int    @id @default(autoincrement())
    name      String @unique @db.VarChar(63)
    shortName String @unique @db.VarChar(7)

    players     Player[]
    homeMatches Match[]  @relation("home")
    awayMatches Match[]  @relation("away")
}

model FantasyTeamPlayer {
    playerId      Int
    fantasyTeamId Int

    player      Player      @relation(fields: [playerId], references: [id])
    fantasyTeam FantasyTeam @relation(fields: [fantasyTeamId], references: [id])
    @@unique([playerId, fantasyTeamId])
}

model FantasyTeam {
    id              Int    @id @default(autoincrement())
    name            String @db.VarChar(63)
    fantasyLeagueId Int
    ownerId         Int

    fantasyLeague FantasyLeague       @relation(fields: [fantasyLeagueId], references: [id])
    owner         User                @relation(fields: [ownerId], references: [id])
    players       FantasyTeamPlayer[]
}

model FantasyLeague {
    id             Int    @id @default(autoincrement())
    name           String @db.VarChar(63)
    commissionerId Int

    fantasyTeams FantasyTeam[]
    commissioner User          @relation(fields: [commissionerId], references: [id])
}

model User {
    id    Int    @id @default(autoincrement())
    name  String @db.VarChar(63)
    email String @unique @db.VarChar(63)

    fantasyTeams        FantasyTeam[]
    commissionerLeagues FantasyLeague[]
}
